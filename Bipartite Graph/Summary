
双连通分量: 分为点-双连通分量和边-双连通分量。
           点-双连通分量: 在一个无向图中两点间至少有两条路径,且路径中的点不同,不同的点-双连通分量最多有一个公共点,该点为割顶(割点,cut vertex,即删去此点时,连通块的数量会增加)。
           边-双连通分量: 在一个无向图中两点间至少有两条路径,且路径中的边不同,边-双连通分量中一定没有桥(割边,bridge,即删去该边,连通块数量增加)。

二分图又称为二部图,设G=(V, E)是一个无向图。如果顶点集V可分割为两个互不相交的子集X和Y，并且图中每条边连接的两个顶点一个在X中，另一个在Y中，则称图G为二分图。
性质: 当且仅当无向图G的每一个回路的次数都是偶数时,G才是一个二分图。若没有回路,即次数为0,G也是一个二分图。
二分图判定: 交叉染色法。
           从任意一个节点出发,与其相邻的节点有三种状态: 1. 未染色,则将该节点染成另一种颜色
                                                    2. 已染色且与当前节点颜色不同,跳过该节点
                                                    3. 已染色但与当前节点颜色相同,则该图不是二分图  
                                                    
二分图匹配: 给定一个二分图G,在G的一个子图M中,M的边集{E}中的任意两条边都不依附于同一个顶点,则称M是一个匹配。
           选择边数最大的子图称为图的最大匹配(maximal matching)。如果一个匹配中,图中的每个顶点都和图中某条边相关联,则称为完全匹配,完全匹配一定是最大匹配。
交替路: 从一个未匹配点出发,依次经过非匹配边、匹配边、非匹配边...,形成的路径是交替路。
增广路(augmenting path): 从一个未匹配点出发,走交替路,如果途径另一个未匹配点(不包括出发点),则这条交替路称为增广路。
增广路定理: 增广路中,非匹配边比匹配边多一条。增广路用于改进匹配,即只要把增广路中的匹配边和非匹配边身份交换,交换后匹配的性质保留且匹配的边数增加了一条。
           通过不断地寻找增广路来增加匹配边数,当找不到合适的增广路时,达到最大匹配。
匈牙利算法(Hungarian algorithm): 基于增广路定理,对于每个可以与节点u匹配的节点v,假如它未被匹配,可以直接用节点v与节点u匹配;
                                如果节点v已与节点w匹配,则dfs(w)求证节点w是否可以与其他节点匹配,若可以则节点v可以与节点u匹配,否则检查节点u的下一个邻接点。
                                时间复杂度: O(V^3(邻接矩阵)),O(VE(邻接表)),空间复杂度: O(V^2(邻接矩阵)),O(V+E(邻接表))
          bool dfs(int u){ //寻找从节点u出发的增广路径
              for each v∈u的邻接点{
                  if(v未访问){
                      标记v已访问;
                      if(v未匹配||dfs(y[v])){
                          x[u]=v;
                          y[v]=u;
                          return true; //有从节点u出发的增广路径
                      }
                  }
              }
          }
          
Konig定理: 二分图中的最大匹配数等于这个图中的最小点覆盖数。
最小点覆盖数: 选择一个点表示覆盖了以该点为端点的所有边,选择最少的点来覆盖所有的边

1. LeetCode  785. Is Graph Bipartite?: 交叉染色DFS
             886. Possible Bipartite: 构建邻接表后交叉染色DFS
2. Codeforces  688C. NP-Hard Problem: 构建邻接表后交叉染色DFS,使用color^1=color'(0->1,1->0)来存储两部分为res[color]
3. HDU  2444. The Accomodation of Students: 
        2063. 过山车:
        1150. Machine Schedule: 
4. POJ  3041. Asteroids:         
                                
           
