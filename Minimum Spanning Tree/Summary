连通图：在无向图中，若任意两个顶点与都有路径相通，则称该无向图为连通图。
强连通图：在有向图中，若任意两个顶点与都有路径相通，则称该有向图为强连通图。
连通网：在连通图中，若图的边具有一定的意义，每一条边都对应着一个数，称为权；权代表着连接连个顶点的代价，称这种连通图叫做连通网。
生成树：一个连通图的生成树是指一个连通子图，它含有图中全部n个顶点，但只有足以构成一棵树的n-1条边。一棵有n个顶点的生成树有且仅有n-1条边，如果生成树中再添加一条边，则必定成环。
最小生成树：在连通网的所有生成树中，所有边的代价和最小的生成树，称为最小生成树。

1. Kruskal算法:将图中所有边都去掉,再将边按权值从小到大的顺序添加到图中,并保证过程中不会形成环,重复上一步直到连接所有顶点,此时得到了最小生成树。
   时间复杂度为O(ElogE),适合稀疏图即边较少。
   KRUSKAL(G):
    1 A = ∅
    2 foreach v ∈ G.V:
    3    MAKE-SET(v)
    4 foreach (u, v) in G.E ordered by weight(u, v), increasing:
    5    if FIND-SET(u) ≠ FIND-SET(v):
    6       A = A ∪ {(u, v)}
    7       UNION(u, v)
    8 return A
   
2. Prim算法:通常以邻接矩阵作为储存结构。它的基本思想是以顶点为主导地位，从起始顶点出发，通过选择当前可用的最小权值边把顶点加入到生成树当中来：
   1.从连通网络N={V,E}中的某一顶点U0出发，选择与它关联的具有最小权值的边（U0,V）,将其顶点加入到生成树的顶点集合U中。
   2.以后每一步从一个顶点在U中，而另一个顶点不在U中的各条边中选择权值最小的边(U,V),把它的顶点加入到集合U中。
   如此继续下去，直到网络中的所有顶点都加入到生成树顶点集合U中为止。
   时间复杂度为O(V^2),适合稠密图即边较多,使用二叉堆和邻接表优化可降低为O(ElogV)。
  
1. HDU  1102. Constructing Roads
        1233. Still Smooth Traffic(还是畅通工程)
        4408. The Number of Minimum Spanning Tree
2. POJ  1679. The Unique MST(次小生成树)
